<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sn.expert.repository.mappers.expert">
	<select id="do_nextSeq" resultType="com.sn.resume.domain.RsmVO">
		SELECT item_seq.nextval as rsm_count FROM dual
	</select>
	
	<update id="do_saveOrder" parameterType="com.sn.resume.domain.RsmVO">
		INSERT ALL
		    INTO resume (rsm_id, img_id, rsm_title, rsm_content, u_id, rsm_reg_dt, rsm_count, rsm_recommend, rsm_use_yn, rsm_ord_yn, rsm_div)
		    VALUES (resume_seq.nextval, img_id, rsm_title, rsm_content, u_id, SYSDATE, rsm_count, rsm_recommend, rsm_use_yn, rsm_ord_yn, rsm_div)
		    INTO orders (rsm_id, exp_id, u_id, ord_state, ord_reg_dt, ord_use_yn)
			VALUES (resume_seq.currval, exp_id, u_id, 20, SYSDATE, 1)
		    ${itm_inserts}
		SELECT *
		FROM
		(
		    SELECT 
		           null img_id,
		           '${rsm_title}' rsm_title,
		           '${rsm_content}' rsm_content,
		           '${u_id}' u_id,
		           0 rsm_count,
		           0 rsm_recommend,
		           1 rsm_use_yn,
		           0 rsm_ord_yn,
		           '${rsm_div}' rsm_div,
		           '${exp_id}' exp_id,
		           ${itm_contents}
		    FROM dual
		)
	</update>

	<select id="do_chkNaver" parameterType="ExpertVO" resultType="ExpertVO">
		SELECT *
		  FROM users, expert, codes
		 WHERE u_id = exp_id
		   AND mst_cd_id = 'C002'
		   AND exp_ctg = dtl_cd_id
		   AND u_naver='${u_naver}'
	</select>
	<select id="do_searchOneNaver" parameterType="ExpertVO" resultType="ExpertVO">
		SELECT u_id,
			   u_password,
			   u_name,
			   TO_CHAR(u_reg_dt,'YYYY-MM-DD') AS u_reg_dt,
			   u_level,
			   u_write_cnt,
			   u_mod_cnt,
		       exp_title,
		       exp_profile,
		       exp_ctg,
		       exp_price,
		       exp_trade
		  FROM users, expert
		 WHERE u_id = exp_id
		   AND u_id = '${u_id}'
		   AND u_password = '${u_password}'
		   AND u_level = 2
	</select>

	<select id="do_searchDetail" parameterType="com.sn.resume.domain.ItmVO" resultType="com.sn.resume.domain.ItmVO">
		SELECT *
		  FROM item
		 WHERE ${u_ids}
		  AND rsm_id = '${rsm_id}'
		ORDER BY rsm_id DESC, itm_prd_id NULLS FIRST, itm_reg_dt
	</select>

	<select id="do_searchDetail_rsm" parameterType="com.sn.resume.domain.ItmVO" resultType="com.sn.resume.domain.UnityItmVO">
		SELECT a.rsm_id,
		       a.rsm_title,
		       a.u_id,
		       TO_CHAR(a.rsm_reg_dt, 'YYYY-MM-DD') AS rsm_reg_dt,
		       dtl_cd_nm AS rsm_div
		  FROM resume a, codes b
		 WHERE a.rsm_div = b.dtl_cd_id
		   AND b.mst_cd_id = 'C002'
		   AND a.rsm_id = '${rsm_id}'
	</select>

	<select id="do_searchDetail_itm" parameterType="ExpertVO" resultType="com.sn.resume.domain.UnityItmVO">
		SELECT *
		  FROM item a, resume b
		 WHERE a.u_id = '${u_id}'
           AND a.rsm_id = b.rsm_id
		   AND a.itm_prd_id IS NOT NULL
		ORDER BY b.rsm_reg_dt DESC
	</select>

	<select id="do_chkId" parameterType="ExpertVO" resultType="ExpertVO">
		SELECT *
		  FROM users, expert, codes
		 WHERE u_id = exp_id
		   AND mst_cd_id = 'C002'
		   AND exp_ctg = dtl_cd_id
		   AND u_id='${u_id}'
	</select>
	
    <select id="do_searchOne" parameterType="ExpertVO" resultType="ExpertVO">
		SELECT u_id,
			   u_password,
			   u_name,
			   TO_CHAR(u_reg_dt,'YYYY-MM-DD') AS u_reg_dt,
			   u_level,
			   u_write_cnt,
			   u_mod_cnt,
		       exp_title,
		       exp_profile,
		       exp_ctg,
		       exp_price,
		       exp_trade
		  FROM users, expert
		 WHERE u_id = exp_id
		   AND u_id = '${u_id}'
		   AND u_password = '${u_password}'
		   AND u_level = 2
    </select>
	
	<update id="do_updateName" parameterType="ExpertVO"  >
		UPDATE expert
		   SET exp_title = '${exp_title}',
		   	   exp_ctg = ${exp_ctg},
		   	   exp_price = ${exp_price}
		 WHERE exp_id = '${u_id}'
	</update>
	
	<update id="do_updateProfile" parameterType="ExpertVO"  >
		UPDATE expert
		   SET exp_title = '${exp_title}',
		   	   exp_profile = '${exp_profile}',
		   	   exp_ctg = ${exp_ctg},
		   	   exp_price = ${exp_price}
		 WHERE exp_id = '${u_id}'
	</update>
	
	<update id="do_save" parameterType="ExpertVO">
		INSERT INTO expert(exp_id, exp_title, exp_profile, exp_ctg, exp_price, exp_trade)
		VALUES(#{exp_id}, #{exp_title}, #{exp_profile}, #{exp_ctg}, #{exp_price}, 0)
    </update>
    
    <sql id="BaseConditionForFilter">    
       <where>   
        <choose>
            <when test="SEARCH_DIV == '10'">
                 A.ID LIKE  #{SEARCH_WORD} || '%'         
            </when>
            <when test="SEARCH_DIV == '20'">
                AND A.name LIKE  #{SEARCH_WORD} || '%'     
            </when>
            <when test="SEARCH_DIV == '30'">
                AND A.u_Level LIKE   #{SEARCH_WORD} || '%'     
            </when>
                        
            <otherwise></otherwise>
        </choose>
        </where>       
    </sql>
    
	<select id="do_search" parameterType="ExpertVO" resultType="ExpertVO">
		SELECT u_id,
		       u_password,
		       u_name,
		       TO_CHAR(u_reg_dt,'YYYY-MM-DD') AS u_reg_dt,
		       u_level,
		       u_write_cnt,
		       u_mod_cnt,
		       exp_id,
		       exp_title,
		       exp_profile,
		       exp_ctg,
		       exp_price,
		       exp_trade,
		       dtl_cd_nm,
		       TOTAL_CNT as totalNo,
		       RNUM as no
		  FROM(SELECT A.*,
		              B.*,
		              C.dtl_cd_nm,
		              ROW_NUMBER() OVER(ORDER BY ${SEARCH_DIV} DESC) as RNUM,
		              COUNT(*) OVER () AS TOTAL_CNT
			     FROM users A , expert B,
		              (SELECT * FROM codes WHERE mst_cd_id = 'C002') C
		         WHERE u_id = exp_id
		           AND dtl_cd_id = exp_ctg
		           ${SEARCH_WORD}
		           ${SEARCH_CATEGORY}
				 ORDER BY ${SEARCH_DIV} DESC
				 <!-- ORDER BY u_reg_dt DESC -->
		      )
		 WHERE RNUM BETWEEN (${PAGE_SIZE} * (${PAGE_NUM}-1)+1) AND (${PAGE_SIZE} * (${PAGE_NUM}-1)+${PAGE_SIZE})
	</select>
	
	<select id="do_searchRank" resultType="ExpertVO">
		SELECT u_id as exp_id,
		       u_name,
		       exp_title,
		       exp_profile,
		       exp_price,
		       exp_trade,
		       dtl_cd_nm
		  FROM(SELECT A.*,
		              B.*,
		              C.dtl_cd_nm,
		              ROW_NUMBER() OVER(ORDER BY exp_trade DESC) as RNUM
			     FROM users A , expert B,
		              (SELECT * FROM codes WHERE mst_cd_id = 'C002') C
		         WHERE u_id = exp_id
		           AND dtl_cd_id = exp_ctg
				 ORDER BY exp_trade DESC, u_reg_dt DESC
		      )
		 WHERE RNUM BETWEEN 1 AND 3
	</select>
	
	<update id="do_updateTrade" parameterType="ExpertVO">
		UPDATE expert
		   SET exp_trade = (SELECT exp_trade FROM expert WHERE exp_id = '${exp_id}') + 1
		 WHERE exp_id = '${exp_id}'
	</update>
</mapper>