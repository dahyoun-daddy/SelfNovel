<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sn.resume.repository.mappers.resume">
	
	<!-- 삽입(Insert) -->
	<!-- RSM_ID는 시퀀스값으로 1씩 증가. 
		 RSM_USE_YN은 기본 1, 삭제시 0으로 변경되도록.
		 RSM_ORD_YN은 화면에서 입력받도록 만들 것. -->
	<insert id="do_save" parameterType="com.sn.resume.domain.RsmVO">
		INSERT INTO RESUME (
		    RSM_ID,
		    IMG_ID,
		    RSM_TITLE,
		    RSM_CONTENT,
		    U_ID,
		    RSM_REG_DT,
		    RSM_COUNT,
		    RSM_RECOMMEND,		    
		    RSM_USE_YN,
		    RSM_ORD_YN,
		    RSM_DIV
		) VALUES (
		    <!-- #{rsm_id,        jdbcType=NUMBER(8)}         , -->
		    RESUME_SEQ.NEXTVAL,
		    #{img_id,        jdbcType=NUMBER }           ,
		    #{rsm_title,     jdbcType=VARCHAR2(50 CHAR)} ,
		    #{rsm_content,   jdbcType=CLOB }             ,
		    #{u_id,          jdbcType=VARCHAR2(100 Byte)},
		    SYSDATE                                      ,
		    #{rsm_count,     jdbcType=NUMBER(5,0)}       ,
		    #{rsm_recommend, jdbcType=NUMBER(5,0)}       ,
		    1,
			#{rsm_ord_yn,    jdbcType=NUMBER(1,0)}       ,
			#{rsm_div,		 jdbcType=VARCHAR2(5 Byte)}  
		)	
	</insert>	
	
	<!-- 삭제(Delete) : 실제 삭제는 이루어지지 않고, 플래그만 UPDATE -->
	<update id="do_delete" parameterType="com.sn.resume.domain.RsmVO">		
		UPDATE RESUME 
		SET RSM_USE_YN    = 0		    
		WHERE RSM_ID = #{rsm_id, jdbcType=NUMBER(8)}
	</update>	
	
	<!-- <delete id="do_delete" parameterType="com.sn.resume.domain.RsmVO">
		DELETE FROM RESUME 
		WHERE RSM_ID = #{rsm_id, jdbcType=NUMBER(8)}
	</delete> -->
	
	<!-- 수정(Update) -->
	<update id="do_update" parameterType="com.sn.resume.domain.RsmVO">		
		UPDATE RESUME 
		SET IMG_ID        = #{img_id,        jdbcType=NUMBER }           ,
		    RSM_TITLE     = #{rsm_title,     jdbcType=VARCHAR2(50 CHAR)} ,
		    RSM_CONTENT   = #{rsm_content,   jdbcType=CLOB }             ,		    
		    RSM_USE_YN    = #{rsm_use_yn,    jdbcType=NUMBER(1,0)}       ,
		    RSM_ORD_YN    = #{rsm_ord_yn,    jdbcType=NUMBER(1,0)}
		WHERE RSM_ID = #{rsm_id, jdbcType=NUMBER(8)}
	</update>
	
	<!-- 조회수 증가 -->
	<update id="do_update_count" parameterType="com.sn.resume.domain.RsmVO">		
		UPDATE RESUME 
		SET RSM_COUNT = NVL(RSM_COUNT, 0) + 1
		WHERE RSM_ID = #{rsm_id, jdbcType=NUMBER(8)}
	</update>
	
	<!-- 추천수 증가 -->
	<update id="do_update_recommend" parameterType="com.sn.resume.domain.RsmVO">		
		UPDATE RESUME 
		SET RSM_RECOMMEND = NVL(RSM_RECOMMEND, 0) + 1
		WHERE RSM_ID = #{rsm_id, jdbcType=NUMBER(8)}
	</update>
	
	<!-- 단건조회(SearchOne) -->
	<select id="do_searchOne" parameterType="com.sn.resume.domain.RsmVO"
							  resultType="com.sn.resume.domain.RsmVO">
		SELECT
		    RSM_ID,
		    IMG_ID,
		    RSM_TITLE,
		    RSM_CONTENT,
		    U_ID,
		    RSM_REG_DT,
		    RSM_COUNT,
		    RSM_RECOMMEND,
		    RSM_COUNT,
		    RSM_USE_YN,
		    RSM_ORD_YN,
		    RSM_DIV
		FROM RESUME
		WHERE ID=#{rsm_id, jdbcType=NUMBER(8)}      
	</select>
	
	<!-- 검색조건 : TODO -->
	<sql id="resumeConditionFilter">    
		<where>   
			<choose>
				<when test="SEARCH_DIV == '10'">
					A.ID LIKE  #{SEARCH_WORD} || '%'         
				</when>
				<when test="SEARCH_DIV == '20'">
					AND A.name LIKE  #{SEARCH_WORD} || '%'     
				</when>
				<when test="SEARCH_DIV == '30'">
					AND A.u_Level LIKE   #{SEARCH_WORD} || '%'     
				</when>                        
				<otherwise></otherwise>
			</choose>
		</where>       
    </sql>
	
	<!-- 전체조회(do_search) : TODO 검색조건 추가할 것 -->
	<select id="do_search" parameterType="String"
						   resultType="com.sn.resume.domain.RsmVO">
		SELECT T1.*,
		       TO_CHAR(T1.RSM_REG_DT, 'YYYY-MM-DD') AS REG_DT,    
		       T1.RNUM AS NO
		  FROM (
		        SELECT A.*,
		               B.U_NAME,
		               ROW_NUMBER() OVER(ORDER BY A.RSM_REG_DT DESC) AS RNUM,
		               COUNT(*) OVER() AS TOTALNO
		          FROM RESUME A, USERS B
		         WHERE A.U_ID = B.U_ID
		         <!-- <include refid="resumeConditionFilter"/> -->
		         ORDER BY A.RSM_REG_DT DESC) T1 
		 WHERE RNUM BETWEEN (#{page_size} * (#{page_num}-1)+1) AND (#{page_size} * (#{page_num}-1)+#{page_size})
	</select>
</mapper>  
  
  
  